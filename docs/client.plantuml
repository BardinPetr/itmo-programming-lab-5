@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class CLIController {
  + CLIController(View, InputStream, ICommandIOCallback): 
  + run(): void
  - runScript(Response<ICommandResponse>): void
}
class Command {
  + Command(): 
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
  + createResponse(): ICommandResponse
  + validate(): ValidationResponse
   inlineArgs: Field[]
   type: String
   interactArgs: Field[]
}
class CommandParser {
  + CommandParser(HashMap<String, Command>, ObjectMapper, Scanner, View): 
  + parse(): Command
}
class CommandRegister {
  + CommandRegister(): 
  + getParser(ObjectMapper, Scanner, View): CommandParser
  - addCommand(Command): void
}
class CommandScriptController {
  + CommandScriptController(): 
  + run(InputStream): List<Command>
}
class ConsolePrinter {
  + ConsolePrinter(): 
  + suggestInput(): void
  + show(String): void
  + showLine(String): void
}
class ExecuteScriptCommandResponse {
  + ExecuteScriptCommandResponse(): 
}
class Executor {
  + Executor(): 
  + execute(Command): Response<ICommandResponse>
  + registerVoidOperation(Class<T>, NoReturnOperation<T>): void
  + registerOperation(Class<T>, Operation<T, ICommandResponse>): void
  # execute(Command, int): Response<ICommandResponse>
  + registerExecutor(Executor): void
  + executeBatch(List<Command>): List<Response<ICommandResponse>>
}
class Field {
  + Field(String, Class<?>): 
  + Field(): 
  - valueClass: Class<?>
  - name: String
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
   name: String
   valueClass: Class<?>
}
class FieldWithDesc<T> {
  + FieldWithDesc(String, Class<T>, String, IValidator<T>, boolean): 
  + FieldWithDesc(String, Class<T>, String, boolean): 
  - promptMsg: String
  - validator: IValidator<T>
  - nullAble: boolean
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
   promptMsg: String
   nullAble: boolean
   validator: IValidator<T>
}
class FileAccessException {
  + FileAccessException(Exception, String, OperationType): 
  + FileAccessException(File, OperationType): 
  + FileAccessException(Exception, File, OperationType): 
  + FileAccessException(String, OperationType): 
  - path: String
  - type: OperationType
   type: OperationType
   path: String
}
class FileIOController {
  + FileIOController(String): 
  + write(byte[]): void
  + clear(): void
  + openWriteStream(): FileOutputStream
  + read(): byte[]
  + openReadStream(): FileInputStream
}
interface ICommandIOCallback << interface >> {
  + callback(Command): Response<ICommandResponse>
}
interface ICommandResponse << interface >> {
   userMessage: String
}
interface IValidator<T> << interface >> {
  + validate(T): ValidationResponse
}
class LocalExecuteScriptCommand {
  + LocalExecuteScriptCommand(): 
  - fileName: String
  + createResponse(): LocalExecuteScriptCommandResponse
   inlineArgs: Field[]
   type: String
   fileName: String
}
class LocalExecuteScriptCommandResponse {
  + LocalExecuteScriptCommandResponse(List<Command>): 
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
   userMessage: String
}
class Main {
  + Main(): 
  + main(String[]): void
}
class ObjectMapperFactory {
  + ObjectMapperFactory(): 
  + createMapper(): ObjectMapper
}
class ObjectScanner {
  + ObjectScanner(Scanner, View, ObjectMapper): 
  - scan(): String?
  - interactValue(Class<T>): T
  + scan(Class<T>): T
}
enum OperationType << enumeration >> {
  - OperationType(String): 
  - OperationType(): 
  - description: String
  + values(): OperationType[]
  + valueOf(String): OperationType
   description: String
}
class ParserException {
  + ParserException(String): 
}
class Response<T> {
  + Response(): 
  + Response(boolean, boolean, String, T): 
  - text: String
  - success: boolean
  - resolved: boolean
  - payload: T
  + hashCode(): int
  # canEqual(Object): boolean
  + toString(): String
  + equals(Object): boolean
  + noResolve(): Response<T>
  + error(String): Response<T>
  + success(T): Response<T>
  + error(Exception): Response<T>
   text: String
   success: boolean
   resolved: boolean
   payload: T
}
class RussianText {
  + RussianText(): 
  + get(TextKeys): String
}
class ScriptExecuteException {
  + ScriptExecuteException(String): 
}
class ScriptExecutor {
  + ScriptExecutor(): 
  - fileInputStream(LocalExecuteScriptCommand): FileInputStream
  - executeScript(LocalExecuteScriptCommand, Set<String>): LocalExecuteScriptCommandResponse
}
class ServerExecuteScriptCommand {
  + ServerExecuteScriptCommand(): 
  + ServerExecuteScriptCommand(List<Command>): 
  - commands: List<Command>
  + createResponse(): ExecuteScriptCommandResponse
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
   commands: List<Command>
   type: String
}
enum TextKeys << enumeration >> {
  + TextKeys(): 
  + values(): TextKeys[]
  + valueOf(String): TextKeys
}
class UIExecutor {
  + UIExecutor(): 
}
class ValidationResponse {
  + ValidationResponse(boolean, String): 
  - allowed: boolean
  - msg: String
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
   msg: String
   allowed: boolean
}
class ValueDeserializer {
  + ValueDeserializer(): 
  + deserialize(Class<K>, String): K
}
interface View << interface >> {
  + suggestInput(): void
  + show(String): void
  + showLine(String): void
}

CLIController                      -[#595959,dashed]->  CLIController                     
CLIController                      -[#595959,dashed]->  Command                           
CLIController                     "1" *-[#595959,plain]-> "cmdParser\n1" CommandParser                     
CLIController                      -[#595959,dashed]->  CommandRegister                   : "«create»"
CLIController                      -[#595959,dashed]->  ExecuteScriptCommandResponse      
CLIController                     "1" *-[#595959,plain]-> "callback\n1" ICommandIOCallback                
CLIController                      -[#595959,dashed]->  ICommandResponse                  
CLIController                      -[#595959,dashed]->  LocalExecuteScriptCommand         
CLIController                      -[#595959,dashed]->  LocalExecuteScriptCommandResponse 
CLIController                      -[#595959,dashed]->  ObjectMapperFactory               
CLIController                      -[#595959,dashed]->  ParserException                   
CLIController                      -[#595959,dashed]->  Response                          
CLIController                      -[#595959,dashed]->  RussianText                       
CLIController                      -[#595959,dashed]->  TextKeys                          
CLIController                     "1" *-[#595959,plain]-> "viewer\n1" View                              
Command                            -[#595959,dashed]->  Field                             : "«create»"
Command                            -[#595959,dashed]->  ICommandResponse                  
Command                            -[#595959,dashed]->  ValidationResponse                : "«create»"
CommandParser                     "1" *-[#595959,plain]-> "cmdMap\n*" Command                           
CommandParser                      -[#595959,dashed]->  Field                             
CommandParser                      -[#595959,dashed]->  ObjectScanner                     : "«create»"
CommandParser                     "1" *-[#595959,plain]-> "objectScanner\n1" ObjectScanner                     
CommandParser                      -[#595959,dashed]->  ParserException                   : "«create»"
CommandParser                      -[#595959,dashed]->  ValueDeserializer                 : "«create»"
CommandParser                     "1" *-[#595959,plain]-> "viewer\n1" View                              
CommandRegister                   "1" *-[#595959,plain]-> "cmdList\n*" Command                           
CommandRegister                    -[#595959,dashed]->  Command                           : "«create»"
CommandRegister                    -[#595959,dashed]->  CommandParser                     : "«create»"
CommandRegister                    -[#595959,dashed]->  CommandRegister                   
CommandRegister                    -[#595959,dashed]->  LocalExecuteScriptCommand         : "«create»"
CommandRegister                    -[#595959,dashed]->  View                              
CommandScriptController            -[#595959,dashed]->  Command                           
CommandScriptController            -[#595959,dashed]->  CommandParser                     
CommandScriptController            -[#595959,dashed]->  CommandRegister                   : "«create»"
CommandScriptController           "1" *-[#595959,plain]-> "cmdRegister\n1" CommandRegister                   
CommandScriptController            -[#595959,dashed]->  ObjectMapperFactory               
CommandScriptController            -[#595959,dashed]->  ParserException                   
CommandScriptController            -[#595959,dashed]->  ScriptExecuteException            : "«create»"
CommandScriptController            -[#595959,dashed]->  View                              
ConsolePrinter                     -[#008200,dashed]-^  View                              
ExecuteScriptCommandResponse       -[#008200,dashed]-^  ICommandResponse                  
ExecuteScriptCommandResponse       -[#595959,dashed]->  Response                          
ExecuteScriptCommandResponse       +-[#820000,plain]-  ServerExecuteScriptCommand        
Executor                           -[#595959,dashed]->  Command                           
Executor                          "1" *-[#595959,plain]-> "childExecutors\n*" Executor                          
Executor                           -[#595959,dashed]->  ICommandResponse                  
Executor                           -[#595959,dashed]->  Response                          
Executor                           -[#595959,dashed]->  ValidationResponse                
FieldWithDesc                      -[#000082,plain]-^  Field                             
FieldWithDesc                     "1" *-[#595959,plain]-> "validator\n1" IValidator                        
FieldWithDesc                      -[#595959,dashed]->  ValidationResponse                : "«create»"
FileAccessException                -[#595959,dashed]->  FileAccessException               
FileAccessException               "1" *-[#595959,plain]-> "type\n1" OperationType                     
FileIOController                   -[#595959,dashed]->  FileAccessException               : "«create»"
FileIOController                   -[#595959,dashed]->  FileIOController                  
ICommandIOCallback                 -[#595959,dashed]->  Command                           
ICommandIOCallback                 -[#595959,dashed]->  ICommandResponse                  
ICommandIOCallback                 -[#595959,dashed]->  Response                          
IValidator                         -[#595959,dashed]->  ValidationResponse                
LocalExecuteScriptCommand          -[#000082,plain]-^  Command                           
LocalExecuteScriptCommand          -[#595959,dashed]->  Field                             : "«create»"
LocalExecuteScriptCommand          -[#595959,dashed]->  LocalExecuteScriptCommandResponse : "«create»"
LocalExecuteScriptCommandResponse  -[#595959,dashed]->  Command                           
LocalExecuteScriptCommandResponse  -[#008200,dashed]-^  ICommandResponse                  
LocalExecuteScriptCommandResponse  +-[#820000,plain]-  LocalExecuteScriptCommand         
LocalExecuteScriptCommandResponse  -[#000082,plain]-^  ServerExecuteScriptCommand        
Main                               -[#595959,dashed]->  CLIController                     : "«create»"
Main                               -[#595959,dashed]->  ConsolePrinter                    : "«create»"
Main                               -[#595959,dashed]->  Executor                          : "«create»"
Main                               -[#595959,dashed]->  FileAccessException               
Main                               -[#595959,dashed]->  FileIOController                  : "«create»"
Main                               -[#595959,dashed]->  ScriptExecutor                    : "«create»"
Main                               -[#595959,dashed]->  UIExecutor                        : "«create»"
Main                               -[#595959,dashed]->  View                              
ObjectScanner                      -[#595959,dashed]->  Field                             
ObjectScanner                      -[#595959,dashed]->  FieldWithDesc                     
ObjectScanner                      -[#595959,dashed]->  IValidator                        
ObjectScanner                      -[#595959,dashed]->  ObjectScanner                     
ObjectScanner                      -[#595959,dashed]->  ParserException                   : "«create»"
ObjectScanner                      -[#595959,dashed]->  ValidationResponse                
ObjectScanner                     "1" *-[#595959,plain]-> "viewer\n1" View                              
OperationType                      +-[#820000,plain]-  FileAccessException               
Response                           -[#595959,dashed]->  ICommandResponse                  
Response                           -[#595959,dashed]->  Response                          : "«create»"
RussianText                       "1" *-[#595959,plain]-> "textList\n*" TextKeys                          
ScriptExecutor                     -[#595959,dashed]->  Command                           
ScriptExecutor                     -[#595959,dashed]->  CommandScriptController           : "«create»"
ScriptExecutor                    "1" *-[#595959,plain]-> "scriptController\n1" CommandScriptController           
ScriptExecutor                     -[#000082,plain]-^  Executor                          
ScriptExecutor                     -[#595959,dashed]->  LocalExecuteScriptCommand         
ScriptExecutor                     -[#595959,dashed]->  LocalExecuteScriptCommandResponse : "«create»"
ScriptExecutor                     -[#595959,dashed]->  ScriptExecutor                    
ServerExecuteScriptCommand         -[#000082,plain]-^  Command                           
ServerExecuteScriptCommand        "1" *-[#595959,plain]-> "commands\n*" Command                           
ServerExecuteScriptCommand         -[#595959,dashed]->  ExecuteScriptCommandResponse      : "«create»"
UIExecutor                         -[#000082,plain]-^  Executor                          
UIExecutor                         -[#595959,dashed]->  RussianText                       
UIExecutor                         -[#595959,dashed]->  TextKeys                          
@enduml
