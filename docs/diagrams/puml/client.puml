
@startuml

!theme plain
top to bottom direction
skinparam linetype ortho
skinparam classAttributeIconSize 0
hide circle

<style>
classDiagram {
    class {
        header {
            FontStyle bold
        }
    }
}
</style>
!theme plain
top to bottom direction
skinparam linetype ortho

interface APIClientReceiver << interface >> {
  + call(APICommand): Response<ICommandResponse>
}
class APICommand {
  + APICommand(): 
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
  + validate(): ValidationResponse
  + getType(): String
  + getInteractArgs(): Field[]
  + getInlineArgs(): Field[]
  + createResponse(): ICommandResponse
}
class APICommandRegistry {
  - APICommandRegistry(): 
  {static} + cmdList: List<APICommand>
  {static} - map: HashMap<String, APICommand>
  {static} + getCommand(String): APICommand
}
abstract class APILocalCommand <<abstract>> {
  + APILocalCommand(APIClientReceiver, UIReceiver): 
  # apiClientReceiver: APIClientReceiver
  - mapper: ObjectMapper
  + execute(String, Map<String, Object>): CommandResponse
  # retrieveAPICommand(String): APICommand
  # prepareAPIMessage(String, Map<String, Object>): APICommand
  + getCommandInlineArgs(String): List<Field>
}
class AbstractCommandDecorator {
  + AbstractCommandDecorator(AbstractLocalCommand): 
  # decoratee: AbstractLocalCommand
  + execute(String, Map<String, Object>): CommandResponse
}
abstract class AbstractLocalCommand <<abstract>> {
  + AbstractLocalCommand():
  {abstract} + execute(String, Map<String, Object>): CommandResponse
}
class CLIController {
  + CLIController(ConsolePrinter, InputStream, boolean): 
  - scanner: Scanner
  - isRepeatable: boolean
  - printer: ConsolePrinter
  - objectScanner: ObjectScanner
  + nextLine(): String
  + ok(String): void
  + display(String): void
  + interactSuggestion(): void
  + hasNextLine(): boolean
  + fill(Class<T>, T): T
  + error(String): void
  + ok(): void
}
class CommandRegistry {
  + CommandRegistry(APIClientReceiver, UIReceiver, ScriptExecutor): 
  - scriptExecutor: ScriptExecutor
  - api: APIClientReceiver
  - commandMap: Map<String, AbstractLocalCommand>
  - register(Collection<String>, AbstractLocalCommand): void
  - register(UILocalCommand): void
  - registerFromAPI(Collection<APICommand>, AbstractLocalCommand): void
  + withUI(UIReceiver): CommandRegistry
  - register(String, AbstractLocalCommand): void
  + getCommand(String): AbstractLocalCommand
}
entity CommandResponse << record >> {
  + CommandResponse(boolean, String, ICommandResponse): 
  - payload: ICommandResponse
  - message: String
  - isSuccess: boolean
  + payload(): ICommandResponse
  {static} + ok(): CommandResponse
  {static} + error(String): CommandResponse
  + isSuccess(): boolean
  + message(): String
}
class ConsolePrinter {
  + ConsolePrinter(): 
  + displayInLine(String): void
  + display(String): void
  {static} + getStub(): ConsolePrinter
}
class DescriptionHolder {
  + DescriptionHolder(): 
  {static} + dataDescriptions: Map<Class<?>, List<FieldWithDesc<?>>>
}
class Executor {
  + Executor(): 
  - operationMap: Map<Class<APICommand>, Operation<APICommand, ICommandResponse>>
  - childExecutors: List<Executor>
  + MAX_RECURSION_DEPTH: int
  + registerExecutor(Executor): void
  + registerVoidOperation(Class<T>, NoReturnOperation<T>): void
  + execute(APICommand): Response<ICommandResponse>
  + executeBatch(List<APICommand>): List<Response<ICommandResponse>>
  + registerOperation(Class<T>, Operation<T, ICommandResponse>): void
  # execute(APICommand, int): Response<ICommandResponse>
}
class ExitLocalCommand {
  + ExitLocalCommand(UIReceiver): 
  + execute(String, Map<String, Object>): CommandResponse
  + getExternalName(): String
}
class Field<T> {
  + Field(): 
  + Field(String, Class<T>): 
  - valueClass: Class<T>
  - name: String
  + getName(): String
  + getValueClass(): Class<T>
  + setName(String): void
  + setValueClass(Class<T>): void
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
}
class FieldWithDesc<T> {
  + FieldWithDesc(String, Class<T>, String, IValidator<T>, boolean): 
  + FieldWithDesc(String, Class<T>, String, boolean): 
  - promptMsg: String
  - nullAble: boolean
  - validator: IValidator<T>
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + getPromptMsg(): String
  + getValidator(): IValidator<T>
  + isNullAble(): boolean
  + toString(): String
}
class FileIOController {
  + FileIOController(String, boolean): 
  + FileIOController(String): 
  + write(byte[]): void
  + openWriteStream(): FileOutputStream
  + clear(): void
  + openReadStream(): FileInputStream
  + read(): byte[]
}
class GeneralAPILocalCommand {
  + GeneralAPILocalCommand(APIClientReceiver, UIReceiver): 
  + getExternalName(): String
}
class HelpLocalCommand {
  + HelpLocalCommand(UIReceiver): 
  + execute(String, Map<String, Object>): CommandResponse
  + getExternalName(): String
}
interface ICommandResponse << interface >> {
  + getUserMessage(): String
}
interface IValidator<T> << interface >> {
  + validate(T): ValidationResponse
}
class Interpreter {
  + Interpreter(CommandRegistry, UIReceiver, UICommandInvoker): 
  - invoker: UICommandInvoker
  - registryCommand: CommandRegistry
  - uiReceiver: UIReceiver
  + run(): void
}
class LocalExecutorAPIConnector {
  + LocalExecutorAPIConnector(Executor): 
  - currentExecutor: Executor
  + call(APICommand): Response<ICommandResponse>
}
class Main {
  + Main(): 
  + main(String[]): void
}
class MainExecutor {
  + MainExecutor(Path): 
}
class NotRepeatableException {
  + NotRepeatableException(): 
}
class ObjectMapperFactory {
  + ObjectMapperFactory(): 
  + createMapper(): ObjectMapper
}
class ObjectScanner {
  + ObjectScanner(ConsolePrinter, Scanner): 
  - dataDescription: Map<Class<?>, List<FieldWithDesc<?>>>
  - printer: ConsolePrinter
  - mapper: ObjectMapper
  ~ callback: Runnable
  - scaner: Scanner
  - interactValue(Class<T>, T): ScannerRespond<T>
  - enterField(FieldWithDesc<T>, Map<String, Object>, Object): int
  - scan(): String?
  + scan(Class<T>, T): ScannerRespond<T>
}
class ParserException {
  + ParserException(String): 
}
class Response<T> {
  + Response(boolean, boolean, String, T): 
  + Response(): 
  - text: String
  - success: boolean
  - payload: T
  - resolved: boolean
  + isResolved(): boolean
  + isSuccess(): boolean
  # canEqual(Object): boolean
  + getText(): String
  + getPayload(): T
  + setSuccess(boolean): void
  + equals(Object): boolean
  + toString(): String
  + setResolved(boolean): void
  + setText(String): void
  + setPayload(T): void
  + hashCode(): int
  + error(String): Response<T>
  + error(Exception): Response<T>
  + noResolve(): Response<T>
  + success(T): Response<T>
}
class RussianText {
  + RussianText(): 
  {static} - textList: Map<TextKeys, String>
  {static} + get(TextKeys): String
}
class ScannerRespond<T> {
  + ScannerRespond(T, int): 
  + countOfRepeat: int
  + object: T
  + getObject(): T
  + getCountOfRepeat(): int
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
}
class ScriptException {
  + ScriptException(String): 
}
class ScriptExecutor {
  + ScriptExecutor(UICommandInvoker): 
  - recursionController: ScriptRecursionController
  - invoker: UICommandInvoker
  - commandRegistry: CommandRegistry
  + setRegistry(CommandRegistry): void
  + process(String): void
}
class ScriptLocalCommand {
  + ScriptLocalCommand(APIClientReceiver, UIReceiver, ScriptExecutor): 
  - scriptExecutor: ScriptExecutor
  + getCommandInlineArgs(String): List<Field>
  + getExternalName(): String
  + execute(String, Map<String, Object>): CommandResponse
  # prepareAPIMessage(String, Map<String, Object>): APICommand
}
class ScriptRecursionController {
  + ScriptRecursionController(): 
  - visitedPaths: Set<String>
  + getDepth(): int
  + leave(String): void
  + clear(): void
  + enter(String): boolean
}
class ScriptRecursionRootException {
  + ScriptRecursionRootException(String): 
}
enum TextKeys << enumeration >> {
  + TextKeys(): 
  + WORKERINTERACT: 
  + COORXINTERACT: 
  + ORGANISATIONTYPEINTERACT: 
  + ORGANIZATIONINTERACT: 
  + NAMEINTERACT: 
  + SALARYINTERACT: 
  + INVALID_APP_ARGUMENTS: 
  + HELP: 
  + ENDNDATEINTERACT: 
  + COORDINATESINTERACT: 
  + ORGANISATIONNAMEINTERACT: 
  + COORYINTERACT: 
  + GREEETING: 
  + FILEIO_ERROR_MESSAGE_TEMLPATE: 
  + STARTDAYINTERACT: 
  + POSITIONINTERACT: 
  + valueOf(String): TextKeys
  + values(): TextKeys[]
}
interface UICallableCommand << interface >> {
  + executeWithArgs(List<String>): CommandResponse
}
class UICommandInvoker {
  + UICommandInvoker(UIReceiver): 
  - screenUIReceiver: UIReceiver
  # print(String, CommandResponse): void
  + invoke(UICallableCommand, List<String>): void
}
interface UIInputReceiver << interface >> {
  + fill(Class<T>, T): T
  + fill(Class<T>): T
  + hasNextLine(): boolean
  + nextLine(): String
}
abstract class UILocalCommand <<abstract>> {
  + UILocalCommand(UIReceiver): 
  - valueDes: ValueDeserializer
  # uiReceiver: UIReceiver
  {static} + NAME_ARG: String
  {abstract} + getExternalName(): String
  + getCommandInlineArgs(String): List<Field>
  - getFullInlineArgs(String): List<Field>
  + executeWithArgs(List<String>): CommandResponse
}
interface UIReceiver << interface >> {
  + error(String): void
  + ok(): void
  + interactSuggestion(): void
  + display(String): void
  + ok(String): void
}
class UpdateLocalCommand {
  + UpdateLocalCommand(APIClientReceiver, UIReceiver): 
  + getExternalName(): String
  # retrieveAPICommand(String): APICommand
  # prepareAPIMessage(String, Map<String, Object>): APICommand
}
class ValueDeserializer {
  + ValueDeserializer(): 
  - mapper: ObjectMapper
  + deserialize(Class<K>, String): K
}

APIClientReceiver             ..>  APICommand                   
APIClientReceiver             ..>  ICommandResponse             
APIClientReceiver             ..>  Response                     
APICommand                    ..>  Field                        
APICommand                    ..>  ICommandResponse             
APICommandRegistry           "1" *--> "cmdList\n*" APICommand                   
APILocalCommand              "1" *--> "apiClientReceiver\n1" APIClientReceiver            
APILocalCommand               ..>  APICommand                   
APILocalCommand               ..>  APICommandRegistry           
APILocalCommand               ..>  CommandResponse              
APILocalCommand               ..>  Field                        
APILocalCommand               ..>  ObjectMapperFactory          
APILocalCommand               ..>  Response                     
APILocalCommand               ..>  UIInputReceiver              
APILocalCommand               --^  UILocalCommand               
APILocalCommand               ..>  UIReceiver                   
AbstractCommandDecorator      --^  AbstractLocalCommand         
AbstractCommandDecorator     "1" *--> "decoratee\n1" AbstractLocalCommand         
AbstractCommandDecorator      ..>  CommandResponse              
AbstractLocalCommand          ..>  CommandResponse              
CLIController                "1" *--> "printer\n1" ConsolePrinter               
CLIController                 ..>  NotRepeatableException       
CLIController                "1" *--> "objectScanner\n1" ObjectScanner                
CLIController                 ..>  ParserException              
CLIController                 ..>  ScannerRespond               
CLIController                 ..^  UIReceiver                   
CommandRegistry              "1" *--> "api\n1" APIClientReceiver            
CommandRegistry               ..>  APICommand                   
CommandRegistry               ..>  APICommandRegistry           
CommandRegistry              "1" *--> "commandMap\n*" AbstractLocalCommand         
CommandRegistry               ..>  ExitLocalCommand             
CommandRegistry               ..>  GeneralAPILocalCommand       
CommandRegistry               ..>  HelpLocalCommand             
CommandRegistry              "1" *--> "scriptExecutor\n1" ScriptExecutor               
CommandRegistry               ..>  ScriptLocalCommand           
CommandRegistry               ..>  UILocalCommand               
CommandRegistry               ..>  UIReceiver                   
CommandRegistry               ..>  UpdateLocalCommand           
CommandResponse               ..>  ICommandResponse             
DescriptionHolder             ..>  FieldWithDesc                
DescriptionHolder             ..>  RussianText                  
DescriptionHolder             ..>  TextKeys                     
Executor                      ..>  APICommand                   
Executor                      ..>  ICommandResponse             
Executor                      ..>  Response                     
ExitLocalCommand              ..>  CommandResponse              
ExitLocalCommand              --^  UILocalCommand               
ExitLocalCommand              ..>  UIReceiver                   
FieldWithDesc                 --^  Field                        
FieldWithDesc                "1" *--> "validator\n1" IValidator                   
GeneralAPILocalCommand        ..>  APIClientReceiver            
GeneralAPILocalCommand        --^  APILocalCommand              
GeneralAPILocalCommand        ..>  UIReceiver                   
HelpLocalCommand              ..>  CommandResponse              
HelpLocalCommand              ..>  RussianText                  
HelpLocalCommand              ..>  TextKeys                     
HelpLocalCommand              --^  UILocalCommand               
HelpLocalCommand              ..>  UIReceiver                   
Interpreter                  "1" *--> "registryCommand\n1" CommandRegistry              
Interpreter                   ..>  RussianText                  
Interpreter                   ..>  TextKeys                     
Interpreter                   ..>  UICallableCommand            
Interpreter                  "1" *--> "invoker\n1" UICommandInvoker             
Interpreter                   ..>  UIInputReceiver              
Interpreter                  "1" *--> "uiReceiver\n1" UIReceiver                   
LocalExecutorAPIConnector     ..^  APIClientReceiver            
LocalExecutorAPIConnector     ..>  APICommand                   
LocalExecutorAPIConnector    "1" *--> "currentExecutor\n1" Executor                     
LocalExecutorAPIConnector     ..>  ICommandResponse             
LocalExecutorAPIConnector     ..>  Response                     
Main                          ..>  CLIController                
Main                          ..>  CommandRegistry              
Main                          ..>  ConsolePrinter               
Main                          ..>  Interpreter                  
Main                          ..>  LocalExecutorAPIConnector    
Main                          ..>  MainExecutor                 
Main                          ..>  RussianText                  
Main                          ..>  ScriptExecutor               
Main                          ..>  TextKeys                     
Main                          ..>  UICommandInvoker             
MainExecutor                  --^  Executor                     
ObjectScanner                "1" *--> "printer\n1" ConsolePrinter               
ObjectScanner                 ..>  DescriptionHolder            
ObjectScanner                 ..>  Field                        
ObjectScanner                 ..>  FieldWithDesc                
ObjectScanner                 ..>  IValidator                   
ObjectScanner                 ..>  ObjectMapperFactory          
ObjectScanner                 ..>  ParserException              
ObjectScanner                 ..>  ScannerRespond               
Response                      ..>  ICommandResponse             
RussianText                  "1" *--> "textList\n*" TextKeys                     
ScannerRespond                +--  ObjectScanner                
ScriptExecutor                ..>  CLIController                
ScriptExecutor               "1" *--> "commandRegistry\n1" CommandRegistry              
ScriptExecutor                ..>  ConsolePrinter               
ScriptExecutor                ..>  FileIOController             
ScriptExecutor                ..>  NotRepeatableException       
ScriptExecutor                ..>  ScriptException              
ScriptExecutor               "1" *--> "recursionController\n1" ScriptRecursionController    
ScriptExecutor                ..>  ScriptRecursionRootException 
ScriptExecutor                ..>  UICallableCommand            
ScriptExecutor               "1" *--> "invoker\n1" UICommandInvoker             
ScriptExecutor                ..>  UIInputReceiver              
ScriptExecutor                ..>  UIReceiver                   
ScriptLocalCommand            ..>  APIClientReceiver            
ScriptLocalCommand            ..>  APICommand                   
ScriptLocalCommand            --^  APILocalCommand              
ScriptLocalCommand            ..>  CommandResponse              
ScriptLocalCommand            ..>  Field                        
ScriptLocalCommand            ..>  NotRepeatableException       
ScriptLocalCommand           "1" *--> "scriptExecutor\n1" ScriptExecutor               
ScriptLocalCommand            ..>  UIReceiver                   
UICallableCommand             ..>  CommandResponse              
UICommandInvoker              ..>  CommandResponse              
UICommandInvoker              ..>  ICommandResponse             
UICommandInvoker              ..>  ScriptException              
UICommandInvoker              ..>  UICallableCommand            
UICommandInvoker             "1" *--> "screenUIReceiver\n1" UIReceiver                   
UILocalCommand                --^  AbstractLocalCommand         
UILocalCommand                ..>  CommandResponse              
UILocalCommand                ..>  Field                        
UILocalCommand                ..^  UICallableCommand            
UILocalCommand               "1" *--> "uiReceiver\n1" UIReceiver                   
UILocalCommand               "1" *--> "valueDes\n1" ValueDeserializer            
UIReceiver                    --^  UIInputReceiver              
UpdateLocalCommand            ..>  APIClientReceiver            
UpdateLocalCommand            ..>  APICommand                   
UpdateLocalCommand            --^  APILocalCommand              
UpdateLocalCommand            ..>  Response                     
UpdateLocalCommand            ..>  UIInputReceiver              
UpdateLocalCommand            ..>  UIReceiver                   
@enduml
