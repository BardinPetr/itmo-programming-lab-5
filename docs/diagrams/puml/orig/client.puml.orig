@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

interface APIClientConnector << interface >> {
  + call(APICommand): APICommandResponse
}
class APICommand {
  + APICommand(): 
  - header: Map<String, Object>
  + validate(): ValidationResponse
  + getHeader(): Map<String, Object>
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
  + createResponse(): APICommandResponse
  + getCmdIdentifier(): Class<APICommand>
}
class APICommandRegistry {
  + APICommandRegistry(List<UserAPICommand>): 
  - cmdList: List<UserAPICommand>
  - map: HashMap<String, UserAPICommand>
  + getCommand(String): UserAPICommand
  + getCommands(): List<UserAPICommand>
}
class APICommandResponse {
  + APICommandResponse(APIResponseStatus, String): 
  + APICommandResponse(): 
  - status: APIResponseStatus
  - textualResponse: String
  + getStatus(): APIResponseStatus
  + getTextualResponse(): String
  + setStatus(APIResponseStatus): void
  + setTextualResponse(String): void
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
  + clientError(String): APICommandResponse
  + serverError(String): APICommandResponse
  + getUserMessage(): String
  + isResolved(): boolean
  + clientError(Exception): APICommandResponse
  + ok(): APICommandResponse
  + isSuccess(): boolean
  + notFound(): APICommandResponse
  + serverError(Exception): APICommandResponse
}
class APICommandsDescriptionHolder {
  + APICommandsDescriptionHolder(Class<?>[]): 
  - dataDescriptions: Map<Class<?>, List<FieldWithDesc<?>>>
  + setDataDescriptions(Map<Class<?>, List<FieldWithDesc<?>>>): void
  - addToMap(Class<?>): void
  + equals(Object): boolean
  + toString(): String
  # canEqual(Object): boolean
  + hashCode(): int
  + getValidator(Class<Validator>, Field, Class<?>): IValidator<T>
  + getDataDescriptions(): Map<Class<?>, List<FieldWithDesc<?>>>
}
class APIConnectorDecorator {
  + APIConnectorDecorator(APIClientConnector): 
  # decoratee: APIClientConnector
  + call(APICommand): APICommandResponse
}
class APIProvider {
  + APIProvider(): 
  - connector: APIClientConnector
  + getConnector(): APIClientConnector
  + setConnector(APIClientConnector): void
}
class APIUIException {
  + APIUIException(Throwable): 
}
class APIUILocalCommand {
  + APIUILocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  # registry: APICommandRegistry
  # apiClientReceiver: APIClientConnector
  - mapper: ObjectMapper
  # getCommandInlineArgs(String): List<Field<?>>
  # retrieveAPICommand(String): UserAPICommand
  # handleInteractArg(Field<T>): T
  + execute(String, Map<String, Object>): ClientCommandResponse<APICommandResponse>
  # prepareAPIMessage(String, Map<String, Object>): APICommand
}
class AbstractAPIClientReceiverFactory {
  + AbstractAPIClientReceiverFactory(): 
  + create(): APIClientConnector
}
class AbstractCommandDecorator {
  + AbstractCommandDecorator(AbstractLocalCommand): 
  # decoratee: AbstractLocalCommand
  + execute(String, Map<String, Object>): ClientCommandResponse<?>
}
class AbstractLocalCommand {
  + AbstractLocalCommand(): 
  + execute(String, Map<String, Object>): ClientCommandResponse<?>
}
class AddLocalCommand {
  + AddLocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  # retrieveAPICommand(String): UserAPICommand
  + getExternalName(): String
  # handleInteractArg(Field<T>): T
}
class AddOrgLocalCommand {
  + AddOrgLocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  # retrieveAPICommand(String): UserAPICommand
  # handleInteractArg(Field<T>): T
  + getExternalName(): String
}
class AdminAPICommandRegistry {
  + AdminAPICommandRegistry(): 
}
class AdminAPICommandsDescriptionHolder {
  + AdminAPICommandsDescriptionHolder(): 
}
class AdminClientCommandRegistry {
  + AdminClientCommandRegistry(APIClientConnector, ScriptExecutor, UIReceiver, APICommandRegistry): 
  - registry: APICommandRegistry
  + withUI(UIReceiver): AdminClientCommandRegistry
}
class AdminTexts {
  + AdminTexts(): 
  - textList: Map<TextKeys, String>
  + get(TextKeys): String
}
class AuthLocalCommand<T> {
  + AuthLocalCommand(AuthCommand<?>, APIClientConnector, UIReceiver, ICredentialsStorage<T>): 
  # credentialsStorage: ICredentialsStorage<T>
  - baseCommand: AuthCommand<?>
  + execute(String, Map<String, Object>): ClientCommandResponse<APICommandResponse>
  # retrieveAPICommand(String): AuthCommand<?>
  # onSuccess(AuthenticationCredentials, APICommandResponse): void
  # getPrompt(): String
  + getExternalName(): String
}
class AuthenticatedConnectorDecorator<C, T> {
  + AuthenticatedConnectorDecorator(APICommandAuthenticator<C>, ICredentialsStorage<T>, APIClientConnector): 
  # storage: ICredentialsStorage<T>
  # authenticator: APICommandAuthenticator<C>
  # prepareCredentials(T): C
  + call(APICommand): APICommandResponse
}
class CLIController {
  + CLIController(APICommandsDescriptionHolder, ConsolePrinter, InputStream, boolean): 
  - objectScanner: ObjectScanner
  - printer: ConsolePrinter
  - scanner: Scanner
  - isRepeatable: boolean
  + hasNextLine(): boolean
  + ok(String): void
  + error(String): void
  + interactSpecial(): InteractSpecialSymbols
  + fill(Class<T>, T, List<String>): T
  + nextLine(): String
  + display(String): void
  + interactSuggestion(): void
  + ok(): void
}
class ClassUtils {
  + ClassUtils(): 
  + wrap(Class<T>): Class<T>
}
entity ClientCommandResponse<T> << record >> {
  + ClientCommandResponse(boolean, String, T): 
  - message: String
  - isSuccess: boolean
  - payload: T
  + ok(): ClientCommandResponse<T>
  + isSuccess(): boolean
  + error(String): ClientCommandResponse<T>
  + payload(): T
  + message(): String
}
class ClientConsoleArgumentsParser {
  + ClientConsoleArgumentsParser(String[]): 
  # createOptions(): Options
  + getHost(): String
  + getPort(): Integer
  + getServerFullAddr(): InetSocketAddress
}
class CommandRegistry {
  + CommandRegistry(APIClientConnector, ScriptExecutor): 
  # api: APIClientConnector
  - commandMap: Map<String, AbstractLocalCommand>
  # scriptExecutor: ScriptExecutor
  # register(Collection<String>, AbstractLocalCommand): void
  # register(String, AbstractLocalCommand): void
  + withUI(UIReceiver): CommandRegistry
  # registerFromAPI(Collection<UserAPICommand>, AbstractLocalCommand): void
  + getCommand(String): AbstractLocalCommand
  # register(UILocalCommand): void
}
class ConsolePrinter {
  + ConsolePrinter(): 
  + getStub(): ConsolePrinter
  + display(String): void
  + displayInLine(String): void
}
class DemoAddLocalCommand {
  + DemoAddLocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  - rng: Random
  + getExternalName(): String
  # retrieveAPICommand(String): UserAPICommand
  # prepareAPIMessage(String, Map<String, Object>): APICommand
  - randomString(int): String
}
class DescShowLocalCommand {
  + DescShowLocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  # retrieveAPICommand(String): UserAPICommand
  # createPagedCommand(int, int): PagingAPICommand
  + getExternalName(): String
}
class Exception {
  + Exception(String, Throwable): 
  + Exception(): 
  + Exception(Throwable): 
  # Exception(String, Throwable, boolean, boolean): 
  + Exception(String): 
  ~ serialVersionUID: long
}
class ExitLocalCommand {
  + ExitLocalCommand(UIReceiver): 
  + getExternalName(): String
  + execute(String, Map<String, Object>): ClientCommandResponse<UserPrintableAPICommandResponse>
}
class GeneralAPIUILocalCommand {
  + GeneralAPIUILocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  + getExternalName(): String
}
class HelpLocalCommand {
  + HelpLocalCommand(UIReceiver): 
  + getExternalName(): String
  + execute(String, Map<String, Object>): ClientCommandResponse
}
class HelpLocalCommand {
  + HelpLocalCommand(UIReceiver): 
  + getExternalName(): String
  + execute(String, Map<String, Object>): ClientCommandResponse
}
interface ICredentialsStorage<C> << interface >> {
  + getCredentials(): C
  + setCredentials(C): void
  + clear(): void
}
interface IValidator<T> << interface >> {
  + validate(T): ValidationResponse
}
enum InteractSpecialSymbols << enumeration >> {
  - InteractSpecialSymbols(): 
  + EXIT: 
  + DOWN: 
  + UP: 
  + values(): InteractSpecialSymbols[]
  + valueOf(String): InteractSpecialSymbols
}
class Interpreter {
  + Interpreter(CommandRegistry, UIReceiver, UICommandInvoker): 
  - registryCommand: CommandRegistry
  - uiReceiver: UIReceiver
  - invoker: UICommandInvoker
  + run(): void
}
entity InvocationHistoryItem << record >> {
  + InvocationHistoryItem(UICallableCommand, List<String>): 
  - command: UICallableCommand
  - args: List<String>
  + command(): UICallableCommand
  + args(): List<String>
}
class JWTAuthConnector {
  + JWTAuthConnector(APICommandAuthenticator<JWTAuthenticationCredentials>, ICredentialsStorage<StoredJWTCredentials>, APIClientConnector): 
  - doRefreshToken(JWTInfo): void
  - doPasswordLogin(): void
  # prepareCredentials(StoredJWTCredentials): JWTAuthenticationCredentials
  + call(APICommand): APICommandResponse
}
class JWTLoginLocalCommand {
  + JWTLoginLocalCommand(APIClientConnector, UIReceiver, ICredentialsStorage<StoredJWTCredentials>): 
  # onSuccess(AuthenticationCredentials, APICommandResponse): void
}
class JWTRegisterLocalCommand {
  + JWTRegisterLocalCommand(APIClientConnector, UIReceiver, ICredentialsStorage<StoredJWTCredentials>): 
  # onSuccess(AuthenticationCredentials, APICommandResponse): void
}
class LocalExecutorAPIConnector {
  + LocalExecutorAPIConnector(Executor): 
  - currentExecutor: Executor
  + call(APICommand): APICommandResponse
}
class LoginLocalCommand<T> {
  + LoginLocalCommand(APIClientConnector, UIReceiver, ICredentialsStorage<T>): 
  # getPrompt(): String
  # onSuccess(AuthenticationCredentials, APICommandResponse): void
}
class LoginPage<T> {
  + LoginPage(APIClientConnector, UIReceiver, ICredentialsStorage<StoredJWTCredentials>, Runnable): 
  - callback: Runnable
  - storage: ICredentialsStorage<StoredJWTCredentials>
  - api: APIClientConnector
  - instance: LoginPage<AuthenticationCredentials>
  - ui: UIReceiver
  - loginCmd: JWTLoginLocalCommand
  - registerCmd: JWTRegisterLocalCommand
  + run(): void
}
class MainClientCommandRegistry {
  + MainClientCommandRegistry(APIClientConnector, ScriptExecutor, UIReceiver, APICommandRegistry, UICommandInvoker, ICredentialsStorage): 
  - credentialsStorage: ICredentialsStorage
  - registry: APICommandRegistry
  - invoker: UICommandInvoker
  + withUI(UIReceiver): MainClientCommandRegistry
}
class MainTexts {
  + MainTexts(): 
  - textList: Map<TextKeys, String>
  + get(TextKeys): String
}
class NetworkServerConnector {
  + NetworkServerConnector(SocketAPIClient): 
  - apiController: SocketAPIClient
  + call(APICommand): APICommandResponse
}
class NotRepeatableException {
  + NotRepeatableException(): 
}
class ObjectScanner {
  + ObjectScanner(APICommandsDescriptionHolder, ConsolePrinter, Scanner): 
  - printer: ConsolePrinter
  - mapper: ObjectMapper
  - dataDescription: Map<Class<?>, List<FieldWithDesc<?>>>
  - scaner: Scanner
  - enterField(FieldWithDesc<T>, Map<String, Object>, Object, List<String>): int
  - interactValue(Class<T>, T, List<String>): ScannerRespond<T>
  + scan(Class<T>, T, List<String>): ScannerRespond<T>
  - scan(): String
}
class OrganizationIdValidator {
  + OrganizationIdValidator(): 
  + validate(Organization): ValidationResponse
}
class PagingLocalCommand {
  + PagingLocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  - count: int
  + getExternalName(): String
  # createPagedCommand(int, int): PagingAPICommand
  + executeWithArgs(List<String>): ClientCommandResponse<UserPrintableAPICommandResponse>
  # retrieveAPICommand(String): UserAPICommand
}
class ParserException {
  + ParserException(String): 
}
class RAMCredentialsStorage<C> {
  + RAMCredentialsStorage(): 
  - creds: C
  + setCredentials(C): void
  + clear(): void
  + getCredentials(): C
}
class RegisterLocalCommand<T> {
  + RegisterLocalCommand(APIClientConnector, UIReceiver, ICredentialsStorage<T>): 
  # onSuccess(AuthenticationCredentials, APICommandResponse): void
  # getPrompt(): String
}
class RepeatLocalCommand {
  + RepeatLocalCommand(UIReceiver, UICommandInvoker): 
  - invoker: UICommandInvoker
  + getExternalName(): String
  + execute(String, Map<String, Object>): ClientCommandResponse<UserPrintableAPICommandResponse>
}
class ScannerRespond<T> {
  + ScannerRespond(T, int): 
  + object: T
  + countOfRepeat: int
  + getObject(): T
  + hashCode(): int
  + getCountOfRepeat(): int
  + equals(Object): boolean
  # canEqual(Object): boolean
  + toString(): String
}
class ScriptException {
  + ScriptException(String): 
}
class ScriptExecutor {
  + ScriptExecutor(APICommandsDescriptionHolder, UICommandInvoker): 
  - recursionController: ScriptRecursionController
  - commandRegistry: CommandRegistry
  - invoker: UICommandInvoker
  - descriptionHolder: APICommandsDescriptionHolder
  + process(String): void
  + setRegistry(CommandRegistry): void
}
class ScriptLocalCommand {
  + ScriptLocalCommand(APIClientConnector, UIReceiver, ScriptExecutor, APICommandRegistry): 
  - scriptExecutor: ScriptExecutor
  + getCommandInlineArgs(String): List<Field<?>>
  + getExternalName(): String
  # prepareAPIMessage(String, Map<String, Object>): APICommand
  + execute(String, Map<String, Object>): ClientCommandResponse
}
class ScriptRecursionController {
  + ScriptRecursionController(): 
  - visitedPaths: Set<String>
  + clear(): void
  + leave(String): void
  + enter(String): boolean
  + getDepth(): int
}
class ScriptRecursionRootException {
  + ScriptRecursionRootException(String): 
}
class ShowLocalCommand {
  + ShowLocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  + getExternalName(): String
  # createPagedCommand(int, int): PagingAPICommand
}
class SocketAPIClient {
  + SocketAPIClient(IClientTransport<SocketMessage>): 
  - serDesService: JSONSerDesService<IAPIMessage>
  # serialize(APICommand): SocketMessage
  # deserialize(SocketMessage): APICommandResponse
}
class StoredJWTCredentials {
  + StoredJWTCredentials(): 
  + StoredJWTCredentials(JWTLoginResponse): 
  + StoredJWTCredentials(JWTInfo, JWTInfo): 
  - authToken: JWTInfo
  - refreshToken: JWTInfo
  + safeIdentifier(): String
  + setAuthToken(JWTInfo): void
  + equals(Object): boolean
  + hashCode(): int
  + setRefreshToken(JWTInfo): void
  + getRefreshToken(): JWTInfo
  + toString(): String
  # canEqual(Object): boolean
  + getAuthToken(): JWTInfo
}
class StressTest {
  + StressTest(): 
  - connectors: ArrayList<APIClientConnector>
  - getAPI(int): APIClientConnector
  + main(String[]): void
  - createAPI(InetSocketAddress): APIClientConnector
}
class StringUtils {
  + StringUtils(): 
  + capitalize(String): String
}
enum TextKeys << enumeration >> {
  - TextKeys(): 
  + APIEXCEPTION: 
  + WORKERINTERACT: 
  + valueOf(String): TextKeys
  + values(): TextKeys[]
}
enum TextKeys << enumeration >> {
  - TextKeys(): 
  + GREEETING: 
  + HELP: 
  + valueOf(String): TextKeys
  + values(): TextKeys[]
}
enum TextKeys << enumeration >> {
  - TextKeys(): 
  + HELP: 
  + GREEETING: 
  + values(): TextKeys[]
  + valueOf(String): TextKeys
}
class Texts {
  + Texts(): 
  - textList: Map<TextKeys, String>
  + get(TextKeys): String
}
class UDPAPIClientFactory {
  + UDPAPIClientFactory(InetSocketAddress): 
  - serverAddress: InetSocketAddress
  + create(): APIClientConnector
}
interface UICallableCommand << interface >> {
  + executeWithArgs(List<String>): ClientCommandResponse<UserPrintableAPICommandResponse>
}
class UICommandInvoker {
  + UICommandInvoker(UIReceiver): 
  - screenUIReceiver: UIReceiver
  - commandHistory: List<InvocationHistoryItem>
  + invoke(UICallableCommand, List<String>): boolean
  + print(String, ClientCommandResponse<UserPrintableAPICommandResponse>): void
  + invokeLast(): boolean
}
interface UIInputReceiver << interface >> {
  + fill(Class<T>): T
  + nextLine(): String
  + fill(Class<T>, T, List<String>): T
  + hasNextLine(): boolean
}
class UILocalCommand {
  + UILocalCommand(UIReceiver): 
  + NAME_ARG: String
  # uiReceiver: UIReceiver
  - valueDes: ValueDeserializer
  + executeWithArgs(List<String>): ClientCommandResponse<UserPrintableAPICommandResponse>
  + execute(String, Map<String, Object>): ClientCommandResponse<UserPrintableAPICommandResponse>
  + getExternalName(): String
  - getFullInlineArgs(String): List<Field<?>>
  # getCommandInlineArgs(String): List<Field<?>>
}
class UIProvider {
  + UIProvider(): 
  - instance: CLIController
  + get(): CLIController
  + setInstance(CLIController): void
}
interface UIReceiver << interface >> {
  + ok(String): void
  + error(String): void
  + interactSuggestion(): void
  + interactSpecial(): InteractSpecialSymbols
  + ok(): void
  + display(String): void
}
class UpdateLocalCommand {
  + UpdateLocalCommand(APIClientConnector, UIReceiver, APICommandRegistry): 
  + getExternalName(): String
  # retrieveAPICommand(String): UserAPICommand
  # prepareAPIMessage(String, Map<String, Object>): APICommand
}
class UserAPICommandRegistry {
  + UserAPICommandRegistry(): 
}
class UserAPICommandsDescriptionHolder {
  + UserAPICommandsDescriptionHolder(): 
}
interface UserPrintableAPICommandResponse << interface >> {
  + getUserMessage(): String
}
interface UserPromptedAPICommand << interface >> {
  + getType(): String
  + getInlineArgs(): Field<?>[]
  + getInteractArgs(): Field<?>[]
}

APICommandResponse                 -[#008200,dashed]-^  UserPrintableAPICommandResponse   
APIConnectorDecorator              -[#008200,dashed]-^  APIClientConnector                
APIConnectorDecorator             "1" *-[#595959,plain]-> "decoratee\n1" APIClientConnector                
APIProvider                       "1" *-[#595959,plain]-> "connector\n1" APIClientConnector                
APIUIException                     -[#000082,plain]-^  Exception                         
APIUILocalCommand                 "1" *-[#595959,plain]-> "apiClientReceiver\n1" APIClientConnector                
APIUILocalCommand                 "1" *-[#595959,plain]-> "registry\n1" APICommandRegistry                
APIUILocalCommand                  -[#000082,plain]-^  UILocalCommand                    
AbstractCommandDecorator           -[#000082,plain]-^  AbstractLocalCommand              
AbstractCommandDecorator          "1" *-[#595959,plain]-> "decoratee\n1" AbstractLocalCommand              
AddLocalCommand                    -[#000082,plain]-^  APIUILocalCommand                 
AddOrgLocalCommand                 -[#000082,plain]-^  APIUILocalCommand                 
AdminAPICommandRegistry            -[#000082,plain]-^  APICommandRegistry                
AdminAPICommandsDescriptionHolder  -[#000082,plain]-^  APICommandsDescriptionHolder      
AdminClientCommandRegistry        "1" *-[#595959,plain]-> "registry\n1" APICommandRegistry                
AdminClientCommandRegistry         -[#000082,plain]-^  CommandRegistry                   
AdminTexts                        "1" *-[#595959,plain]-> "textList\n*" TextKeys                          
AdminTexts                         -[#000082,plain]-^  Texts                             
AuthLocalCommand                   -[#000082,plain]-^  APIUILocalCommand                 
AuthLocalCommand                  "1" *-[#595959,plain]-> "credentialsStorage\n1" ICredentialsStorage               
AuthenticatedConnectorDecorator    -[#000082,plain]-^  APIConnectorDecorator             
AuthenticatedConnectorDecorator   "1" *-[#595959,plain]-> "storage\n1" ICredentialsStorage               
CLIController                     "1" *-[#595959,plain]-> "printer\n1" ConsolePrinter                    
CLIController                     "1" *-[#595959,plain]-> "objectScanner\n1" ObjectScanner                     
CLIController                      -[#008200,dashed]-^  UIReceiver                        
CommandRegistry                   "1" *-[#595959,plain]-> "api\n1" APIClientConnector                
CommandRegistry                   "1" *-[#595959,plain]-> "commandMap\n*" AbstractLocalCommand              
CommandRegistry                   "1" *-[#595959,plain]-> "scriptExecutor\n1" ScriptExecutor                    
DemoAddLocalCommand                -[#000082,plain]-^  APIUILocalCommand                 
DescShowLocalCommand               -[#000082,plain]-^  PagingLocalCommand                
ExitLocalCommand                   -[#000082,plain]-^  UILocalCommand                    
GeneralAPIUILocalCommand           -[#000082,plain]-^  APIUILocalCommand                 
HelpLocalCommand                   -[#000082,plain]-^  UILocalCommand                    
HelpLocalCommand                   -[#000082,plain]-^  UILocalCommand                    
Interpreter                       "1" *-[#595959,plain]-> "registryCommand\n1" CommandRegistry                   
Interpreter                       "1" *-[#595959,plain]-> "invoker\n1" UICommandInvoker                  
Interpreter                       "1" *-[#595959,plain]-> "uiReceiver\n1" UIReceiver                        
JWTAuthConnector                   -[#000082,plain]-^  AuthenticatedConnectorDecorator   
JWTLoginLocalCommand               -[#000082,plain]-^  LoginLocalCommand                 
JWTRegisterLocalCommand            -[#000082,plain]-^  RegisterLocalCommand              
LocalExecutorAPIConnector          -[#008200,dashed]-^  APIClientConnector                
LoginLocalCommand                  -[#000082,plain]-^  AuthLocalCommand                  
LoginPage                         "1" *-[#595959,plain]-> "api\n1" APIClientConnector                
LoginPage                         "1" *-[#595959,plain]-> "storage\n1" ICredentialsStorage               
LoginPage                         "1" *-[#595959,plain]-> "loginCmd\n1" JWTLoginLocalCommand              
LoginPage                         "1" *-[#595959,plain]-> "registerCmd\n1" JWTRegisterLocalCommand           
LoginPage                         "1" *-[#595959,plain]-> "ui\n1" UIReceiver                        
MainClientCommandRegistry         "1" *-[#595959,plain]-> "registry\n1" APICommandRegistry                
MainClientCommandRegistry          -[#000082,plain]-^  CommandRegistry                   
MainClientCommandRegistry         "1" *-[#595959,plain]-> "credentialsStorage\n1" ICredentialsStorage               
MainClientCommandRegistry         "1" *-[#595959,plain]-> "invoker\n1" UICommandInvoker                  
MainTexts                         "1" *-[#595959,plain]-> "textList\n*" TextKeys                          
MainTexts                          -[#000082,plain]-^  Texts                             
NetworkServerConnector             -[#008200,dashed]-^  APIClientConnector                
NetworkServerConnector            "1" *-[#595959,plain]-> "apiController\n1" SocketAPIClient                   
NotRepeatableException             -[#000082,plain]-^  Exception                         
ObjectScanner                     "1" *-[#595959,plain]-> "printer\n1" ConsolePrinter                    
OrganizationIdValidator            -[#008200,dashed]-^  IValidator                        
PagingLocalCommand                 -[#000082,plain]-^  APIUILocalCommand                 
ParserException                    -[#000082,plain]-^  Exception                         
RAMCredentialsStorage              -[#008200,dashed]-^  ICredentialsStorage               
RegisterLocalCommand               -[#000082,plain]-^  AuthLocalCommand                  
RepeatLocalCommand                "1" *-[#595959,plain]-> "invoker\n1" UICommandInvoker                  
RepeatLocalCommand                 -[#000082,plain]-^  UILocalCommand                    
ScannerRespond                     +-[#820000,plain]-  ObjectScanner                     
ScriptException                    -[#000082,plain]-^  Exception                         
ScriptExecutor                    "1" *-[#595959,plain]-> "descriptionHolder\n1" APICommandsDescriptionHolder      
ScriptExecutor                    "1" *-[#595959,plain]-> "commandRegistry\n1" CommandRegistry                   
ScriptExecutor                    "1" *-[#595959,plain]-> "recursionController\n1" ScriptRecursionController         
ScriptExecutor                    "1" *-[#595959,plain]-> "invoker\n1" UICommandInvoker                  
ScriptLocalCommand                 -[#000082,plain]-^  APIUILocalCommand                 
ScriptLocalCommand                "1" *-[#595959,plain]-> "scriptExecutor\n1" ScriptExecutor                    
ScriptRecursionRootException       -[#000082,plain]-^  Exception                         
ShowLocalCommand                   -[#000082,plain]-^  PagingLocalCommand                
StressTest                        "1" *-[#595959,plain]-> "connectors\n*" APIClientConnector                
TextKeys                           +-[#820000,plain]-  AdminTexts                        
TextKeys                           +-[#820000,plain]-  MainTexts                         
TextKeys                           +-[#820000,plain]-  Texts                             
Texts                             "1" *-[#595959,plain]-> "textList\n*" TextKeys                          
UDPAPIClientFactory                -[#000082,plain]-^  AbstractAPIClientReceiverFactory  
UICommandInvoker                  "1" *-[#595959,plain]-> "commandHistory\n*" InvocationHistoryItem             
UICommandInvoker                  "1" *-[#595959,plain]-> "screenUIReceiver\n1" UIReceiver                        
UILocalCommand                     -[#000082,plain]-^  AbstractLocalCommand              
UILocalCommand                     -[#008200,dashed]-^  UICallableCommand                 
UILocalCommand                    "1" *-[#595959,plain]-> "uiReceiver\n1" UIReceiver                        
UIProvider                        "1" *-[#595959,plain]-> "instance\n1" CLIController                     
UIReceiver                         -[#008200,plain]-^  UIInputReceiver                   
UpdateLocalCommand                 -[#000082,plain]-^  APIUILocalCommand                 
UserAPICommandRegistry             -[#000082,plain]-^  APICommandRegistry                
UserAPICommandsDescriptionHolder   -[#000082,plain]-^  APICommandsDescriptionHolder      
@enduml
